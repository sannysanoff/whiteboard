* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

body {
    background-color: #f5f5f7;
    color: #333;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

.container {
    max-width: 100%;
    margin: 0 auto;
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: stretch; /* Changed from center to stretch */
    justify-content: center;
    min-height: 100vh;
}

h1 {
    font-size: 2rem;
    margin-bottom: 1.5rem;
    text-align: center;
    color: #333;
}

.flipper-container {
    width: 100%;
    max-width: 600px;
    /* Adjusted to align with the top of the camera container on the right.
       Calculated as: (h1 line-height-derived-height + h1 margin-bottom)
       h1 font-size: 2rem, assumed line-height: 1.2 => h1 height ~2.4rem
       h1 margin-bottom: 1.5rem
       Total margin-top: 2.4rem + 1.5rem = 3.9rem */
    margin-top: 3.9rem;
    margin-bottom: 2rem;
}

.flipper-content {
    position: relative;
    width: 400px;
    height: 400px;
    overflow: hidden;
    padding-right: 40px;
}

.flipper-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
    display: flex;
    align-items: center;
    justify-content: center;
}

.flipper-slide.active {
    opacity: 1;
}

.instruction-container {
    width: 100%;
    max-width: 600px;
}

.instruction {
    display: flex;
    align-items: center;
    margin-bottom: 1rem;
    background-color: white;
    padding: 15px;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

.icon {
    font-size: 1.8rem;
    margin-right: 15px;
    min-width: 40px;
    text-align: center;
}

.text h3 {
    font-size: 1.1rem;
    margin-bottom: 5px;
}

.text p {
    font-size: 0.9rem;
    color: #666;
}

.image-container {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: white;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    padding: 20px;
}

.image-container img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    border-radius: 8px;
}

.flipper-dots {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 15px;
}

.dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: #ccc;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.dot.active {
    background-color: #007aff;
}

.dot:hover {
    background-color: #999;
}


#camera-container {
    position: relative;
    width: 100%;
    max-width: 800px;
    margin: 0 auto 2rem;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
}

#webcam {
    width: 100%;
    height: auto;
    display: block;
}

#overlay-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* pointer-events: none; Allow interaction for dragging handles - No longer needed here for canvas */
}

.draggable-handle {
    position: absolute;
    width: 16px;
    height: 16px;
    cursor: grab;
    z-index: 10;
}

.draggable-handle:active {
    cursor: grabbing;
}

/* Circle element for handles */
.handle-circle {
    position: absolute;
    width: 12px;
    height: 12px;
    background-color: #ff4444;
    border: 2px solid white;
    border-radius: 50%;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    z-index: 11;
}

.draggable-handle:active .handle-circle {
    background-color: #cc0000;
}

/* Animation for handle flash and zoom effect */
@keyframes handleFlashZoom {
    0% {
        transform: scale(1);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        background-color: #ff4444;
    }
    10% {
        transform: scale(4);
        box-shadow: 0 0 40px rgba(0, 122, 255, 1), 0 0 80px rgba(0, 122, 255, 0.6);
        background-color: #007aff;
    }
    25% {
        transform: scale(2);
        box-shadow: 0 0 30px rgba(255, 68, 68, 0.9), 0 0 60px rgba(255, 68, 68, 0.5);
        background-color: #ff4444;
    }
    40% {
        transform: scale(5);
        box-shadow: 0 0 50px rgba(0, 122, 255, 1), 0 0 100px rgba(0, 122, 255, 0.7);
        background-color: #007aff;
    }
    55% {
        transform: scale(1.5);
        box-shadow: 0 0 25px rgba(255, 68, 68, 0.8), 0 0 50px rgba(255, 68, 68, 0.4);
        background-color: #ff4444;
    }
    70% {
        transform: scale(3.5);
        box-shadow: 0 0 35px rgba(0, 122, 255, 0.9), 0 0 70px rgba(0, 122, 255, 0.5);
        background-color: #007aff;
    }
    85% {
        transform: scale(1.8);
        box-shadow: 0 0 20px rgba(255, 68, 68, 0.6), 0 0 40px rgba(255, 68, 68, 0.3);
        background-color: #ff4444;
    }
    100% {
        transform: scale(1);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        background-color: #ff4444;
    }
}

.handle-flash-zoom .handle-circle {
    animation: handleFlashZoom 3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.corner-label {
    position: absolute;
    color: white;
    font-size: 12px;
    font-weight: bold;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
    pointer-events: none;
    z-index: 13;
    background-color: rgba(0, 0, 0, 0.6);
    padding: 2px 4px;
    border-radius: 3px;
    white-space: nowrap;
    /* Position will be set by JavaScript */
}

#magnifier {
    position: absolute;
    width: 100px;
    height: 100px;
    border: 2px solid #fff;
    box-shadow: 0 0 10px rgba(0,0,0,0.5);
    pointer-events: none; /* So it doesn't interfere with mouse events on handles */
    z-index: 20; /* Above handles and labels */
    background-color: #333; /* Fallback, should be covered by canvas */
}

#magnifier-canvas {
    width: 100%;
    height: 100%;
    display: block;
}

#slider-container {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80%;
    max-width: 300px;
    display: flex;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.6);
    padding: 8px 15px;
    border-radius: 30px;
}

#minus-btn, #plus-btn {
    background: none;
    border: none;
    color: white;
    font-size: 1.2rem;
    cursor: pointer;
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
}

#zoom-slider {
    flex: 1;
    margin: 0 10px;
    -webkit-appearance: none;
    height: 4px;
    background: #888;
    border-radius: 2px;
}

#zoom-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 18px;
    height: 18px;
    background: white;
    border-radius: 50%;
    cursor: pointer;
}

#start-btn {
    background-color: #28a745; /* Neutral green */
    color: white;
    border: none;
    padding: 12px 24px;
    font-size: 1rem;
    font-weight: 600;
    border-radius: 30px;
    cursor: pointer;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    transition: all 0.2s ease;
}

#start-btn:hover {
    background-color: #218838; /* Darker green */
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
}

#whiteboard-view {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    height: 100vh;
    width: 100vw;
    flex-direction: column;
    transition: opacity 0.3s ease 0.1s; /* Add 100ms delay before transition starts */
}

#canvas-container {
    flex: 1;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100vh; /* Full viewport height since controls are now floating */
    background-color: #f0f0f0;
    overflow: visible;
}

#whiteboard-canvas {
    max-width: 100%;
    max-height: 100%;
    position: relative;
    background-color: white;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
    transition: width 0.2s ease, height 0.2s ease;
}

.whiteboard-resize-handle {
    position: absolute;
    width: 8px; /* Thickness of the handle */
    height: 70px; /* Length of the handle */
    background-color: rgba(0, 0, 0, 0.05); /* Very subtle, "almost fully away" */
    border: 1px solid rgba(0, 0, 0, 0.1); /* Slightly more defined border for the rectangle shape */
    cursor: ew-resize;
    z-index: 10; 
    display: block; /* make them visible by default */
    border-radius: 3px;
    /* Opacity is handled by RGBA alpha values directly. Transition border-color too. */
    transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, transform 0.3s ease-in-out;
}

.whiteboard-resize-handle:hover {
    background-color: rgba(0, 122, 255, 0.6); /* Active blue on hover */
    border-color: rgba(0, 122, 255, 0.8); /* Stronger border for hover */
    transform: scaleX(1.5); /* Slightly expand on hover */
}

/* Animation for whiteboard resize handles on whiteboard activation */
@keyframes whiteboardHandleIntro {
    0% {
        opacity: 0;
        transform: scaleX(0.2) scaleY(0.5);
        background-color: rgba(0, 122, 255, 0.9);
        border-color: rgba(0, 122, 255, 1);
        box-shadow: 0 0 20px rgba(0, 122, 255, 0.8);
    }
    25% {
        opacity: 1;
        transform: scaleX(2) scaleY(1.2);
        background-color: rgba(0, 122, 255, 0.8);
        border-color: rgba(0, 122, 255, 1);
        box-shadow: 0 0 30px rgba(0, 122, 255, 0.9);
    }
    50% {
        transform: scaleX(0.8) scaleY(0.9);
        background-color: rgba(0, 122, 255, 0.7);
        box-shadow: 0 0 15px rgba(0, 122, 255, 0.6);
    }
    75% {
        transform: scaleX(1.5) scaleY(1.1);
        background-color: rgba(0, 122, 255, 0.6);
        box-shadow: 0 0 25px rgba(0, 122, 255, 0.7);
    }
    100% {
        opacity: 1;
        transform: scaleX(1) scaleY(1);
        background-color: rgba(0, 0, 0, 0.05);
        border-color: rgba(0, 0, 0, 0.1);
        box-shadow: none;
    }
}

.whiteboard-handle-intro {
    animation: whiteboardHandleIntro 2.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

/* Specific styles if needed for left/right, but positioning is via JS */
/* .whiteboard-resize-handle.left { } */
/* .whiteboard-resize-handle.right { } */

.floating-controls {
    position: fixed;
    top: 20px;
    left: 20px;
    right: 20px;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    z-index: 1000;
    pointer-events: none; /* Allow clicks to pass through the container */
}

.floating-controls > * {
    pointer-events: auto; /* Re-enable clicks on actual buttons */
}

.fab-group {
    display: flex;
    gap: 12px;
}

.fab {
    width: 56px;
    height: 56px;
    border-radius: 50%;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
}

.fab::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: currentColor;
    opacity: 0;
    transition: opacity 0.3s ease;
    border-radius: 50%;
}

.fab:hover::before {
    opacity: 0.08;
}

.fab:active {
    transform: scale(0.96);
}

.fab-back {
    background-color: #f5f5f7;
    color: #333;
}

.fab-back:hover {
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
    transform: translateY(-2px);
}

.fab-action {
    background-color: #007aff;
    color: white;
}

.fab-action:hover {
    box-shadow: 0 6px 20px rgba(0, 122, 255, 0.4);
    transform: translateY(-2px);
}

.fab svg {
    width: 24px;
    height: 24px;
    z-index: 1;
    position: relative;
}

.toast {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 12px 24px;
    border-radius: 8px;
    font-size: 14px;
    z-index: 1000;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.toast.show {
    opacity: 1;
}


.active {
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* Styles for horizontal setup view layout */
#setup-view.active {
    display: flex;
    flex-direction: row; /* Horizontal layout */
    align-items: flex-start; /* Align panels to the top */
    width: 100%; /* Span the full width of its parent (.container's content box) */
    gap: 20px; /* Space between left and right panels */
    /* Overrides general .active styles like align-items: center and flex-direction: column */
}

.setup-actions {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-top: 1rem; /* Or adjust as needed */
    width: 100%;
}

#hold-video-btn {
    background-color: white; /* White background */
    color: #333; /* Black text */
    border: 1px solid #ccc; /* Light gray border for definition */
    padding: 12px 24px;
    font-size: 1rem;
    font-weight: 600;
    border-radius: 30px;
    cursor: pointer;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    transition: all 0.2s ease;
}

#hold-video-btn:hover {
    background-color: #f0f0f0; /* Light gray background on hover */
    border-color: #bbb; /* Slightly darker border on hover */
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
}

.setup-left-panel, .setup-right-panel {
    flex: 1; /* Each panel will share the space equally */
    display: flex;
    flex-direction: column;
}

.setup-left-panel {
    align-items: center; /* Center children horizontally */
}

/* Specific alignment for content within right panel */
.setup-right-panel {
    align-items: center; /* Center camera view and button */
}

.setup-right-panel #camera-container {
    width: 100%; /* Make camera container responsive to panel width */
    max-width: 100%; /* Override its previous max-width to fit panel */
    margin: 0 0 2rem 0; /* Adjust margin, remove horizontal auto margin */
}

/* End of styles for horizontal setup view layout */

/* Ensure children of whiteboard-view stretch to its full width when active */
#whiteboard-view.active {
    align-items: stretch; /* Override .active's align-items: center */
}

@media (max-width: 768px) {
    h1 {
        font-size: 1.5rem;
    }

    .flipper-container {
        /* Adjust margin-top for smaller screens based on h1 font-size change.
           h1 font-size: 1.5rem, assumed line-height: 1.2 => h1 height ~1.8rem
           h1 margin-bottom: 1.5rem
           Total margin-top: 1.8rem + 1.5rem = 3.3rem */
        margin-top: 3.3rem;
    }
    
    .instruction {
        padding: 10px;
    }
    
    .icon {
        font-size: 1.5rem;
    }
    
    .text h3 {
        font-size: 1rem;
    }
    
    .text p {
        font-size: 0.8rem;
    }
    
    #start-btn {
        padding: 10px 20px;
        font-size: 0.9rem;
    }
}

/* Only show whiteboard resize handles in whiteboard view */
#whiteboard-view .whiteboard-resize-handle {
  display: block;
}
